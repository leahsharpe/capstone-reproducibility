base<-rnorm(12,50,10)
percent<-c(base+rnorm(12,20,5),  #position1 yes
base+rnorm(12,12,5),  #position2 yes
base+rnorm(12,5,5),   #position3 yes
base+rnorm(12,0,5),   #position4 yes
base+rnorm(12,-4,5),  #position5 yes
base+rnorm(12,-5,5),  #position6 yes
base+rnorm(12,-6,5),  #position7 yes
base+rnorm(12,-8,5),  #position8 yes
base+rnorm(12,-10,5), #position9 yes
base+rnorm(12,-12,5), #position10 yes
base+rnorm(12,20,5),  #position1 no
base+rnorm(12,12,5),  #position2 no
base+rnorm(12,5,5),   #position3 no
base+rnorm(12,0,5),   #position4 no
base+rnorm(12,-4,5),  #position5 no
base+rnorm(12,-5,5),  #position6 no
base+rnorm(12,-2,5),  #position7 no
base+rnorm(12,4,5),   #position8 no
base+rnorm(12,8,5),   #position9 no
base+rnorm(12,15,5))  #position10 no
position<-as.factor(rep(rep(1:10,each=12),2))
distractor<-rep(c("yes","no"),each=120)
subject<-as.factor(rep(1:12,20))
subject2<-as.factor(c(rep(1:12,10),rep(13:24,10)))
df<-data.frame(percent,position,distractor,subject,subject2)
dat<-data.frame(percent,position,distractor,subject,subject2)
dat$position<-as.factor(dat$position)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$distractor=="no",]
summary(aov(percent~position, data=temp))
summary(aov(percent~position+Error(subject/position)))
temp<-temp%>%group_by(position)%>%
summarize(means=mean(percent),
sems=sd(percent)/sqrt(length(percent)))
f<-ggplot(temp, aes(x=as.factor(position),
y=means,
group=1))+
geom_line(size=1)+
geom_point(size=2)+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2)+
ggtitle("Serial Position Effect")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
summary(aov(percent~position*distractor, data=dat))
temp<-dat%>%group_by(position, distractor)%>%
summarize(means=mean(percent),
sems=sd(percent)/sqrt(length(percent)))
temp
f<-ggplot(polsum, aes(x=position,
y=means,
group=distractor,
color=distractor))+
geom_line(size=1)+
geom_point(size=2)+
scale_color_manual(values=c("red","green"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems, ymin=means-sems),width=.2)+
ggtitle("Serial Position with and without distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
f<-ggplot(temp, aes(x=position,
y=means,
group=distractor,
color=distractor))+
geom_line(size=1)+
geom_point(size=2)+
scale_color_manual(values=c("red","green"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems, ymin=means-sems),width=.2)+
ggtitle("Serial Position with and without distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
f<-ggplot(temp, aes(x=position,
y=means,
group=distractor,
color=distractor))+
geom_line(size=1)+
geom_point(size=2)+
scale_color_manual(values=c("darkgreen","red"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems, ymin=means-sems),width=.2)+
ggtitle("Serial Position with and without distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
f<-ggplot(temp, aes(x=position,
y=means,
fill=distractor))+
geom_bar(stat="identity",position=position_dodge())
scale_color_manual(values=c("darkgreen","red"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2,
position=position_dodge(.9))+
ggtitle("Serial Position With and Without Distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
f<-ggplot(temp, aes(x=position,
y=means,
fill=distractor))+
geom_bar(stat="identity",position=position_dodge())
scale_fill_manual(values=c("darkgreen","red"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2,
position=position_dodge(.9))+
ggtitle("Serial Position With and Without Distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
f<-ggplot(temp, aes(x=position,
y=means,
fill=distractor))+
geom_bar(stat="identity",position=position_dodge())+
scale_fill_manual(values=c("darkgreen","red"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2,
position=position_dodge(.9))+
ggtitle("Serial Position With and Without Distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
summary(aov(percent~position*distractor+
Error(subject/(position*distractor))))
str(dat)
summary(aov(percent~position*distractor+
Error(subject2/position)))
distractors<-rep(rep(c(4,8,12),each=12),2)
distractors
distractors<-rep(rep(c(4,8,12),each=8),2)
distractors
type<-rep(c("feature", "conjunction"),24) #conjunction vs feature
type
type<-rep(c("feature", "conjunction"),each=24) #conjunction vs feature
type
df<-data.frame(type,distractors,subject,subject2)
df
type<-rep(c("feature", "conjunction"),each=24) #conjunction vs feature
distractors<-as.factor(rep(rep(c(4,8,12),each=8),2))
subject<-as.factor(rep(1:8),6)
subject2<-as.factor(c(rep(1:8,3),rep(9:16,3)))
df<-data.frame(type,distractors,subject,subject2)
type<-rep(c("feature", "conjunction"),each=24) #conjunction vs feature
distractors<-as.factor(rep(rep(c(4,8,12),each=8),2))
subject<-as.factor(rep(1:8,6))
subject2<-as.factor(c(rep(1:8,3),rep(9:16,3)))
df<-data.frame(type,distractors,subject,subject2)
df
set.seed(7)
base<-rnorm(8,400,20)
rt<-c(base+rnorm(8,-100,15),
base+rnorm(8,-100,15),
base+rnorm(8,-100,15),
base+rnorm(8,50,15),
base+rnorm(8,75,15),
base+rnorm(8,100,15))
type<-rep(c("feature", "conjunction"),each=24) #conjunction vs feature
distractors<-as.factor(rep(rep(c(4,8,12),each=8),2))
subject<-as.factor(rep(1:8,6))
subject2<-as.factor(c(rep(1:8,3),rep(9:16,3)))
df<-data.frame(rt,type,distractors,subject,subject2)
df
write.csv(df,file="homework6.csv", row.names=FALSE)
dat<-read.csv("example6.csv")
str(dat)
temp<-dat[dat$type=="conjunction",]
str(temp)
dat<-read.csv("example6.csv")
dat$position<-as.factor(dat$position)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$type=="conjunction",]
str(temp)
summary(aov(percent~distractors, data=temp))
set.seed(7)
base<-rnorm(8,400,20)
rt<-c(base+rnorm(8,-100,15),
base+rnorm(8,-100,15),
base+rnorm(8,-100,15),
base+rnorm(8,50,15),
base+rnorm(8,75,15),
base+rnorm(8,100,15))
type<-rep(c("feature", "conjunction"),each=24) #conjunction vs feature
distractors<-as.factor(rep(rep(c(4,8,12),each=8),2))
subject<-as.factor(rep(1:8,6))
subject2<-as.factor(c(rep(1:8,3),rep(9:16,3)))
df<-data.frame(rt,type,distractors,subject,subject2)
write.csv(df,file="homework6.csv", row.names=FALSE)
dat<-read.csv("example6.csv")
dat$position<-as.factor(dat$position)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
str(dat)
temp<-dat[dat$distractor=="yes",]
temp
summary(aov(percent~distractor, data=temp))
str(temp)
summary(aov(percent~position, data=temp))
temp<-temp%>%group_by(position)%>%
summarize(means=mean(percent),
sems=sd(percent)/sqrt(length(percent)))
f<-ggplot(temp, aes(x=as.factor(position),
y=means,
group=1))+
geom_line(size=1)+
geom_point(size=2)+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2)+
ggtitle("Serial Position Effect")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
summary(aov(percent~position+
Error(subject/position)))
summary(aov(percent~position+
Error(subject/position),data=temp))
temp<-dat[dat$distractor=="yes",]
summary(aov(percent~position+
Error(subject/position),data=temp))
summary(aov(percent~position*distractor, data=dat))
temp<-dat%>%group_by(position,distractor)%>%
summarize(means=mean(percent),
sems=sd(percent)/sqrt(length(n)))
temp
summary(aov(percent~position*distractor+
Error(subject/(position*distractor))))
summary(aov(percent~position*distractor+
Error(subject/(position*distractor),
data=dat)))
str(dat)
summary(aov(percent~position*distractor+
Error(subject/(position*distractor)),
data=dat))
summary(aov(percent~position*distractor+
Error(subject2/position),
data=dat))
setwd("C:/Users/Leah/Desktop/capstone-reproducibility/06 ANOVA")
dat<-read.csv("homework6.csv")
str(dat)
knit_with_parameters('C:/Users/Leah/Desktop/capstone-reproducibility/06 ANOVA/example6.Rmd')
dat$position<-as.factor(dat$position)
dat$subject2<-as.factor(dat$subject2)
dat$subject<-as.factor(dat$subject)
dat$position<-as.factor(dat$position)
# Chunk 1
dat<-read.csv("homework6.csv")
# Chunk 2
str(dat)
temp<-dat[dat$distractor=="yes",]
dat$position<-as.factor(dat$position)
dat$distractors<-as.factor(dat$distractors)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
dat$distractors<-as.factor(dat$distractors)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$type=="conjunction",]
summary(aov(rt~distractors, data=temp))
library(ggplot2)
library(gplots)
library(dplyr)
library(ggplot2)
library(gplots)
library(dplyr)
```
summarize(means=mean(rt),
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
temp<-temp%>%group_by(distractors)%>%
summarize(means=mean(rt),
sems=sd(rt)/sqrt(length(rt)))
f<-ggplot(temp, aes(x=as.factor(distractors),
y=means,
geom_line(size=1)+
temp<-dat[dat$type=="conjunction",]
```{r}
temp<-dat[dat$type=="conjunction",]
```{r}
summary(aov(rt~distractors+
Error(subject/distractors),data=temp))
```{r}
summary(aov(rt~distractors*type, data=dat))
```{r}
temp<-dat%>%group_by(distractors,type)%>%
summarize(means=mean(rt),
sems=sd(rt)/sqrt(length(n)))
theme(legend.title=element_text(size=12))+
temp<-dat%>%group_by(distractors,type)%>%
summarize(means=mean(rt),
sems=sd(rt)/sqrt(length(n)))
```
```{r}
f<-ggplot(temp, aes(x=distractors,
y=means,
group=type,
color=type))+
geom_line(size=1)+
geom_point(size=2)+
scale_color_manual(values=c("darkgreen","red"),
name="Type",
breaks=c("conjunction","feature"),
labels=c("conjunction", "feature"))+
geom_errorbar(aes(ymax=means+sems, ymin=means-sems),width=.2)+
ggtitle("Performance by Type with Distractors")+
labs(x="Distractors",y="Performance Time")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
f<-ggplot(temp, aes(x=distractors,
y=means,
fill=type))+
geom_bar(stat="identity",position=position_dodge())+
scale_fill_manual(values=c("darkgreen","red"),
name="Type",
breaks=c("conjunction","feature"),
labels=c("conjunction", "feature"))+
ymin=means-sems),
width=.2,
position=position_dodge(.9))+
ggtitle("Performance by Type with Distractors")+
labs(x="Distractors",y="Performance Time")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
geom_errorbar(aes(ymax=means+sems,
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
max(temp$means)+2*max(temp$sems)))+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
```
summary(aov(rt~distractors*type+
Error(subject/(distractors*type)),data=dat))
```{r}
summary(aov(rt~distractors*type+
Error(subject2/distractors),
data=dat))
